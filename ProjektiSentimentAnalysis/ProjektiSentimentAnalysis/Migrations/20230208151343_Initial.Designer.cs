// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sentiment_Analysis_Project.Models;

#nullable disable

namespace ProjektiSentimentAnalysis.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230208151343_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Fakulteti", b =>
                {
                    b.Property<int>("FakultetiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FakultetiId"), 1L, 1);

                    b.Property<string>("Dega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitulliDiplomimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FakultetiId");

                    b.ToTable("Fakultetis");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("FakultetiId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutiId")
                        .HasColumnType("int");

                    b.Property<string>("Permbajtja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedbackId");

                    b.HasIndex("FakultetiId");

                    b.HasIndex("InstitutiId");

                    b.ToTable("Feedbakcs");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Infk", b =>
                {
                    b.Property<int>("InfkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InfkId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FakultetiId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutiId")
                        .HasColumnType("int");

                    b.Property<string>("StatusiAkredititmit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VitiAkreditimit")
                        .HasColumnType("datetime2");

                    b.HasKey("InfkId");

                    b.HasIndex("FakultetiId");

                    b.HasIndex("InstitutiId");

                    b.ToTable("Infks");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Instituti", b =>
                {
                    b.Property<int>("InstitutiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstitutiId"), 1L, 1);

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokacioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NrStudenteve")
                        .HasColumnType("int");

                    b.Property<string>("Nrtelefonit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitutiId");

                    b.ToTable("Institutis");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Feedback", b =>
                {
                    b.HasOne("Sentiment_Analysis_Project.Models.Fakulteti", "Fakulteti")
                        .WithMany("Feedbacks")
                        .HasForeignKey("FakultetiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sentiment_Analysis_Project.Models.Instituti", "Instituti")
                        .WithMany("Feedbacks")
                        .HasForeignKey("InstitutiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulteti");

                    b.Navigation("Instituti");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Infk", b =>
                {
                    b.HasOne("Sentiment_Analysis_Project.Models.Fakulteti", "Fakulteti")
                        .WithMany("Infks")
                        .HasForeignKey("FakultetiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sentiment_Analysis_Project.Models.Instituti", "Instituti")
                        .WithMany("Infks")
                        .HasForeignKey("InstitutiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulteti");

                    b.Navigation("Instituti");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Fakulteti", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Infks");
                });

            modelBuilder.Entity("Sentiment_Analysis_Project.Models.Instituti", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Infks");
                });
#pragma warning restore 612, 618
        }
    }
}
